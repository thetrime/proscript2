FUNCTOR(error, "error", 2)
FUNCTOR(crossModuleCall, ":", 2)
FUNCTOR(dictPair, ":", 2)
FUNCTOR(list, ".", 2)
FUNCTOR(curly, "{}", 1)
FUNCTOR(conjunction, ",", 2)
FUNCTOR(disjunction, ";", 2)
FUNCTOR(localCut, "->", 2)
FUNCTOR(clause, ":-", 2)
FUNCTOR(typeError, "type_error", 2)
FUNCTOR(not, "\\+", 1)
FUNCTOR(throw, "throw", 1)
FUNCTOR(cleanupChoicepoint, "$cleanup_choicepoint", 2)
FUNCTOR(notUnifiable, "\\=", 2)
FUNCTOR(unify, "=", 2)
FUNCTOR(predicateIndicator, "/", 2)
FUNCTOR(existenceError, "existence_error", 2)
FUNCTOR(syntaxError, "syntax_error", 1)
FUNCTOR(domainError, "domain_error", 2)
FUNCTOR(permissionError, "permission_error", 3)
FUNCTOR(representationError, "representation_error", 1)
FUNCTOR(catch, "catch", 3)
FUNCTOR(caught, "caught", 3)
FUNCTOR(directive, ":-", 1)
FUNCTOR(add, "+", 2)
FUNCTOR(position, "stream_position", 1)
FUNCTOR(ioError, "io_error", 1)
FUNCTOR(op, "op", 3)
FUNCTOR(numberedVar, "$VAR", 1)
FUNCTOR(subtract, "-", 2)
FUNCTOR(multiply, "*", 2)
FUNCTOR(divide, "/", 2)
FUNCTOR(intDiv, "//", 2)
FUNCTOR(remainder, "rem", 2)
FUNCTOR(modulo, "mod", 2)
FUNCTOR(negate, "-", 1)
FUNCTOR(abs, "abs", 1)
FUNCTOR(sign, "sign", 1)
FUNCTOR(floatIntegerPart, "float_integer_part", 1)
FUNCTOR(floatFractionPart, "float_fraction_part", 1)
FUNCTOR(floor, "floor", 1)
FUNCTOR(float, "float", 1)
FUNCTOR(truncate, "truncate", 1)
FUNCTOR(round, "round", 1)
FUNCTOR(ceiling, "ceiling", 1)
FUNCTOR(exponentiation, "^", 2)
FUNCTOR(rdiv, "rdiv", 2)
FUNCTOR(module, "module", 2)
FUNCTOR(metaPredicate, "meta_predicate", 1)
FUNCTOR(dynamic, "dynamic", 1)
FUNCTOR(multiFile, "multi_file", 1)
FUNCTOR(discontiguous, "discontiguous", 1)
FUNCTOR(initialization, "initialization", 1)
FUNCTOR(dbCell, "$db", 2)
FUNCTOR(subAtomContext, "$sc", 6)
FUNCTOR(fail, "fail", 0)
FUNCTOR(formatError, "format_error", 1)
FUNCTOR(atom, "atom", 1)
FUNCTOR(upper, "upper", 1);
FUNCTOR(toUpper, "to_upper", 1);
FUNCTOR(lower, "lower", 1);
FUNCTOR(toLower, "to_lower", 1);
FUNCTOR(xdigit, "xdigit", 1);
FUNCTOR(digit, "digit", 1);
FUNCTOR(paren, "paren", 1);
FUNCTOR(min, "min", 2);
FUNCTOR(max, "max", 2);
FUNCTOR(random, "random", 1);
FUNCTOR(dict, "$dict", 2);
FUNCTOR(hyphenPair, "-", 2)

ATOM(instantiationError, "instantiation_error")
ATOM(cut, "!")
ATOM(callable, "callable")
ATOM(query, "$query")
ATOM(endOfFile, "end_of_file")
ATOM(emptyList, "[]")
ATOM(curly, "{}")
ATOM(false, "false")
ATOM(true, "true")
ATOM(codes, "codes")
ATOM(chars, "chars")
ATOM(atom, "atom")
ATOM(atomic, "atomic")
ATOM(error, "error")
ATOM(fail, "fail")
ATOM(warning, "warning")
ATOM(catch, "$catch")
ATOM(procedure, "procedure")
ATOM(compound, "compound")
ATOM(notLessThanZero, "not_less_than_zero")
ATOM(integer, "integer")
ATOM(access, "access")
ATOM(privateProcedure, "private_procedure")
ATOM(staticProcedure, "static_procedure")
ATOM(predicateIndicator, "predicate_indicator")
ATOM(list, "list")
ATOM(number, "number")
ATOM(character, "character")
ATOM(characterCode, "character_code")
ATOM(bounded, "bounded")
ATOM(maxInteger, "max_integer")
ATOM(minInteger, "min_integer")
ATOM(integerRoundingFunction, "integer_rounding_function")
ATOM(maxArity, "max_arity")
ATOM(charConversion, "char_conversion")
ATOM(debug, "debug")
ATOM(flag, "flag")
ATOM(on, "on")
ATOM(off, "off")
ATOM(unknown, "unknown")
ATOM(modify, "modify")
ATOM(doubleQuotes, "unknown")
ATOM(flagValue, "flag_value")
ATOM(prologFlag, "prolog_flag")
ATOM(towardZero, "toward_zero")
ATOM(streamOrAlias, "stream_or_alias")
ATOM(read, "read")
ATOM(write, "write")
ATOM(append, "append")
ATOM(ioMode, "io_mode")
ATOM(FX, "fx")
ATOM(FY, "fy")
ATOM(XFX, "xfx")
ATOM(XFY, "fy")
ATOM(YFX, "yfx")
ATOM(XF, "xf")
ATOM(YF, "yf")
ATOM(operatorSpecifier, "operator_specifier")
ATOM(numbervars, "numbervars")
ATOM(ignoreOps, "ignore_ops")
ATOM(quoted, "quoted")
ATOM(option, "option")
ATOM(output, "output")
ATOM(stream, "stream")
ATOM(evaluable, "evaluable")
ATOM(integerOverflow, "integer_overflow")
ATOM(floatOverflow, "float_overflow")
ATOM(zeroDivisor, "zero_divisor")
ATOM(float, "float")
ATOM(dbReference, "db_reference")
ATOM(nonEmptyList, "non_empty_list")
ATOM(currentOutput, "current_output")
ATOM(userError, "user_error")
ATOM(empty, "")
ATOM(text, "text")
ATOM(alnum, "alnum")
ATOM(alpha, "alpha")
ATOM(ascii, "ascii")
ATOM(cntrl, "cntrl")
ATOM(csym, "csym")
ATOM(csymf, "csymf")
ATOM(digit, "digit")
ATOM(endOfLine, "end_of_line")
ATOM(graph, "graph")
ATOM(lower, "lower")
ATOM(newline, "newline")
ATOM(period, "period")
ATOM(prologAtomStart, "prolog_atom_start")
ATOM(prologIdentifierContinue, "prolog_identifier_continue")
ATOM(prologSymbol, "prolog_symbol")
ATOM(prologVarStart, "prolog_var_start")
ATOM(punct, "punct")
ATOM(quote, "quote")
ATOM(space, "space")
ATOM(upper, "upper")
ATOM(white, "white")
ATOM(charType, "char_type")
ATOM(sourceSink, "source_sink")
ATOM(open, "open")
ATOM(dict, "dict")
ATOM(dictPair, "dict_pair")
